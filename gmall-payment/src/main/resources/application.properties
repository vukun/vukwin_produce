#服务端口号
server.port=8087
#jdbc
spring.datasource.password=SHUyan2597534
spring.datasource.username=kwin
spring.datasource.url=jdbc:mysql://rm-uf6skjkpv0xh2555l0o.mysql.rds.aliyuncs.com:3306/gmall?serverTimezone=Asia/Shanghai

#mybatis(应用于非通用的mybatis)
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
mybatis.configuration.map-underscore-to-camel-case=true

mapper.identity=MYSQL

#日志级别
logging.level.root=info 

#Dubbo的配置(详见Gmall项目总结第11点)

#Dubbo的服务名称(牵扯到容器的概念，因为服务会去zookeeper上注册信息，而一个服务中会有多个类，
# 多个类去同步更新信息时找的就是包含我的这个服务容器名称，这个名称是用来区分是哪个web容器注册的)
spring.dubbo.application=gmall-payment
#Dubbo的通讯协议的名称
spring.dubbo.protocol.name=dubbo
#zookeeper服务注册中心的地址
spring.dubbo.registry.address=116.62.145.54:2181
#zookeeper的通讯协议的名称
spring.dubbo.registry.protocol=zookeeper
#Dubbo的服务扫描路径(包含了可以扫描所有子项目的service服务)
spring.dubbo.base-package=com.njupt.gmall

# redis链接地址
spring.redis.host=116.62.145.54
# redis端口号
spring.redis.port=6379
# redis数据库
spring.redis.database=0
redis.testOnBorrow=false

#设置超时时间
spring.dubbo.consumer.timeout=6000000
#设置是否检查服务存在
spring.dubbo.consumer.check=false

#关闭Thymeleaf的缓存（热部署）
spring.thymeleaf.cache=false
#松校验
spring.thymeleaf.mode=LEGACYHTML5

# mq消息端口tcp协议
spring.activemq.broker-url=tcp://116.62.145.54:61616
# 开启监听
activemq.listener.enable=true

